"""
Validador de edad con mensajes personalizados.

- Si edad <= 0: "no existes" (dato inverosÃ­mil)
- Si edad > 115: demasiado alta (tambiÃ©n inverosÃ­mil)
- Si 0 < edad < 18: menor de edad (no puede comprar cigarros)
- Si 18 <= edad <= 115: edad vÃ¡lida

Escribe 'salir' o 'q' para terminar sin validar.
"""

MAX_EDAD_RAZONABLE = 115
MAYORIA_EDAD = 18


def pedir_edad() -> int:
    """
    Pide una edad al usuario y solo regresa cuando logra convertir a int.
    Acepta espacios, signo y nÃºmeros. Repite en caso de error.
    """
    while True:
        texto = input("Ingresa tu edad (o 'salir' para terminar): ").strip().lower()
        if texto in ("salir", "q"):
            raise SystemExit("Saliendoâ€¦")
        try:
            # int() valida y lanza ValueError si no es nÃºmero entero
            edad = int(texto)
            return edad
        except ValueError:
            print("Entrada invÃ¡lida. Por favor escribe un nÃºmero entero (por ejemplo: 0, 17, 25).")


def clasificar_edad(edad: int) -> str:
    """
    Devuelve el mensaje correspondiente segÃºn las reglas del negocio.
    """
    if edad <= 0:
        return "QuÃ© joven eresâ€¦ no te creo, o sea, no existes ğŸ¤”"
    elif edad > MAX_EDAD_RAZONABLE:
        return "Â¡Vaya! Â¿CÃ³mo le haces para vivir tanto? Eres un monje ğŸ§˜; no te creo, mejor intenta de nuevo."
    elif edad < MAYORIA_EDAD:
        return "Eres menor de edad: no puedes comprar cigarros ğŸš­"
    else:
        return "Edad vÃ¡lida âœ… Eres mayor de edad."


def main():
    try:
        edad = pedir_edad()
        mensaje = clasificar_edad(edad)
        print(mensaje)
    except SystemExit as e:
        print(e)


if __name__ == "__main__":
    main()
